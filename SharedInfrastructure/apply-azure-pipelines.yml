trigger: none

resources:
  repositories:
    - repository: corePipelineTemplates
      type: github
      name: tumsky12/CorePipelineTemplates
      ref: refs/tags/1.0.0
      # ref:  'refs/heads/init-changes'
      endpoint: GitHubConnection
    - repository: terraformModules
      type: github
      name: tumsky12/CoreTerraformModules
      ref:  'refs/heads/main'
      endpoint: GitHubConnection

variables:
  infrastructureName: SharedInfrastructure
  backendAzureRmContainerName: shared-tf-storage

# jobs:
# - job:
#   steps:
#   - task: TerraformCLI@1
#     displayName: 'Terraform Init'
#     inputs:
#       command: init
#       backendType: azurerm
#       workingDirectory: '$(System.DefaultWorkingDirectory)/SharedInfrastructure/Terraform'
#       backendServiceArm: 'Workload Identity Federation Connection'
#       ensureBackend: true
#       backendAzureRmResourceGroupName: rg-terraform-dev
#       backendAzureRmResourceGroupLocation: uksouth
#       backendAzureRmStorageAccountName: foo
#       backendAzureRmStorageAccountSku: 'Standard_RAGRS'
#       backendAzureRmKey: 'terraform.tfstate'
#       allowTelemetryCollection: true

extends:
  template: apply-env-template.yml@self
  parameters:
    environments:
      - envName: 'dev'
        infrastructureName: 'foo'
        backendAzureRmResourceGroupName: rg-terraform-dev
      # - envName: 'stg'
      #   dependsOn: 'dev'
      #   infrastructureName: $(infrastructureName)
      #   backendAzureRmResourceGroupName: rg-terraform-stg
      # - envName: 'prd'
      #   dependsOn: 'stg'
      #   infrastructureName: $(infrastructureName)
      #   backendAzureRmResourceGroupName: rg-terraform-prd

